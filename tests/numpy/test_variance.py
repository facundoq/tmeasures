from tmeasures.numpy.stats_running import RunningMeanAndVarianceWelford, RunningMeanWelford

import numpy as np


x = np.array([[-1.2118e-02,  2.0079e-01, -6.1858e-01,  1.1261e+00,  8.8290e-02,
         -4.9974e-01,  2.4111e-01, -4.1555e-01,  2.4234e-02, -1.2444e-01,
          7.3010e-02,  1.5073e-01, -2.6869e-01,  2.0982e-02,  1.3245e-03,
         -5.2742e-01,  9.1494e-01, -2.9904e-02,  3.5611e-01, -1.6542e-03,
          4.6138e-02, -4.5048e-02,  3.9157e-02, -3.1836e-01,  1.2403e-01,
         -1.6275e-01,  1.7810e-02,  5.5963e-01,  3.2815e-01, -6.7112e-01,
          7.8985e-01,  5.6185e-04],
        [-1.2118e-02,  2.0079e-01, -6.1858e-01,  1.1261e+00,  8.8290e-02,
         -4.9974e-01,  2.4111e-01, -4.1555e-01,  2.4234e-02, -1.2444e-01,
          7.3010e-02,  1.5073e-01, -2.6869e-01,  2.0982e-02,  1.3245e-03,
         -5.2742e-01,  9.1494e-01, -2.9904e-02,  3.5611e-01, -1.6542e-03,
          4.6138e-02, -4.5048e-02,  3.9157e-02, -3.1836e-01,  1.2403e-01,
         -1.6275e-01,  1.7810e-02,  5.5963e-01,  3.2815e-01, -6.7112e-01,
          7.8985e-01,  5.6184e-04],
        [-1.2118e-02,  2.0079e-01, -6.1858e-01,  1.1261e+00,  8.8290e-02,
         -4.9974e-01,  2.4111e-01, -4.1555e-01,  2.4234e-02, -1.2444e-01,
          7.3010e-02,  1.5073e-01, -2.6869e-01,  2.0982e-02,  1.3245e-03,
         -5.2742e-01,  9.1494e-01, -2.9904e-02,  3.5611e-01, -1.6542e-03,
          4.6138e-02, -4.5048e-02,  3.9157e-02, -3.1836e-01,  1.2403e-01,
         -1.6275e-01,  1.7810e-02,  5.5963e-01,  3.2815e-01, -6.7112e-01,
          7.8985e-01,  5.6184e-04],
        [-1.2118e-02,  2.0079e-01, -6.1858e-01,  1.1261e+00,  8.8290e-02,
         -4.9974e-01,  2.4111e-01, -4.1555e-01,  2.4234e-02, -1.2444e-01,
          7.3010e-02,  1.5073e-01, -2.6869e-01,  2.0982e-02,  1.3245e-03,
         -5.2742e-01,  9.1494e-01, -2.9904e-02,  3.5611e-01, -1.6542e-03,
          4.6138e-02, -4.5048e-02,  3.9157e-02, -3.1836e-01,  1.2403e-01,
         -1.6275e-01,  1.7810e-02,  5.5963e-01,  3.2815e-01, -6.7112e-01,
          7.8985e-01,  5.6184e-04],
        [-1.2118e-02,  2.0079e-01, -6.1858e-01,  1.1261e+00,  8.8290e-02,
         -4.9974e-01,  2.4111e-01, -4.1555e-01,  2.4234e-02, -1.2444e-01,
          7.3010e-02,  1.5073e-01, -2.6869e-01,  2.0982e-02,  1.3245e-03,
         -5.2742e-01,  9.1494e-01, -2.9904e-02,  3.5611e-01, -1.6542e-03,
          4.6138e-02, -4.5048e-02,  3.9157e-02, -3.1836e-01,  1.2403e-01,
         -1.6275e-01,  1.7810e-02,  5.5963e-01,  3.2815e-01, -6.7112e-01,
          7.8985e-01,  5.6184e-04],
        [-1.2118e-02,  2.0079e-01, -6.1858e-01,  1.1261e+00,  8.8290e-02,
         -4.9974e-01,  2.4111e-01, -4.1555e-01,  2.4234e-02, -1.2444e-01,
          7.3010e-02,  1.5073e-01, -2.6869e-01,  2.0982e-02,  1.3245e-03,
         -5.2742e-01,  9.1494e-01, -2.9904e-02,  3.5611e-01, -1.6542e-03,
          4.6138e-02, -4.5048e-02,  3.9157e-02, -3.1836e-01,  1.2403e-01,
         -1.6275e-01,  1.7810e-02,  5.5963e-01,  3.2815e-01, -6.7112e-01,
          7.8985e-01,  5.6184e-04],
        [-1.2118e-02,  2.0079e-01, -6.1858e-01,  1.1261e+00,  8.8290e-02,
         -4.9974e-01,  2.4111e-01, -4.1555e-01,  2.4234e-02, -1.2444e-01,
          7.3010e-02,  1.5073e-01, -2.6869e-01,  2.0982e-02,  1.3245e-03,
         -5.2742e-01,  9.1494e-01, -2.9904e-02,  3.5611e-01, -1.6542e-03,
          4.6138e-02, -4.5048e-02,  3.9157e-02, -3.1836e-01,  1.2403e-01,
         -1.6275e-01,  1.7810e-02,  5.5963e-01,  3.2815e-01, -6.7112e-01,
          7.8985e-01,  5.6184e-04],
        [-1.2118e-02,  2.0079e-01, -6.1858e-01,  1.1261e+00,  8.8290e-02,
         -4.9974e-01,  2.4111e-01, -4.1555e-01,  2.4234e-02, -1.2444e-01,
          7.3010e-02,  1.5073e-01, -2.6869e-01,  2.0982e-02,  1.3245e-03,
         -5.2742e-01,  9.1494e-01, -2.9904e-02,  3.5611e-01, -1.6542e-03,
          4.6138e-02, -4.5048e-02,  3.9157e-02, -3.1836e-01,  1.2403e-01,
         -1.6275e-01,  1.7810e-02,  5.5963e-01,  3.2815e-01, -6.7112e-01,
          7.8985e-01,  5.6185e-04],
        [-1.2118e-02,  2.0079e-01, -6.1858e-01,  1.1261e+00,  8.8290e-02,
         -4.9974e-01,  2.4111e-01, -4.1555e-01,  2.4234e-02, -1.2444e-01,
          7.3010e-02,  1.5073e-01, -2.6869e-01,  2.0982e-02,  1.3245e-03,
         -5.2742e-01,  9.1494e-01, -2.9904e-02,  3.5611e-01, -1.6542e-03,
          4.6138e-02, -4.5048e-02,  3.9157e-02, -3.1836e-01,  1.2403e-01,
         -1.6275e-01,  1.7810e-02,  5.5963e-01,  3.2815e-01, -6.7112e-01,
          7.8985e-01,  5.6185e-04],
        [-1.2118e-02,  2.0079e-01, -6.1858e-01,  1.1261e+00,  8.8290e-02,
         -4.9974e-01,  2.4111e-01, -4.1555e-01,  2.4234e-02, -1.2444e-01,
          7.3010e-02,  1.5073e-01, -2.6869e-01,  2.0982e-02,  1.3245e-03,
         -5.2742e-01,  9.1494e-01, -2.9904e-02,  3.5611e-01, -1.6542e-03,
          4.6138e-02, -4.5048e-02,  3.9157e-02, -3.1836e-01,  1.2403e-01,
         -1.6275e-01,  1.7810e-02,  5.5963e-01,  3.2815e-01, -6.7112e-01,
          7.8985e-01,  5.6187e-04],
        [-1.2118e-02,  2.0079e-01, -6.1858e-01,  1.1261e+00,  8.8290e-02,
         -4.9974e-01,  2.4111e-01, -4.1555e-01,  2.4234e-02, -1.2444e-01,
          7.3010e-02,  1.5073e-01, -2.6869e-01,  2.0982e-02,  1.3245e-03,
         -5.2742e-01,  9.1494e-01, -2.9904e-02,  3.5611e-01, -1.6542e-03,
          4.6138e-02, -4.5048e-02,  3.9157e-02, -3.1836e-01,  1.2403e-01,
         -1.6275e-01,  1.7810e-02,  5.5963e-01,  3.2815e-01, -6.7112e-01,
          7.8985e-01,  5.6184e-04],
        [-1.2118e-02,  2.0079e-01, -6.1858e-01,  1.1261e+00,  8.8290e-02,
         -4.9974e-01,  2.4111e-01, -4.1555e-01,  2.4234e-02, -1.2444e-01,
          7.3010e-02,  1.5073e-01, -2.6869e-01,  2.0982e-02,  1.3245e-03,
         -5.2742e-01,  9.1494e-01, -2.9904e-02,  3.5611e-01, -1.6542e-03,
          4.6138e-02, -4.5048e-02,  3.9157e-02, -3.1836e-01,  1.2403e-01,
         -1.6275e-01,  1.7810e-02,  5.5963e-01,  3.2815e-01, -6.7112e-01,
          7.8985e-01,  5.6185e-04],
        [-1.2118e-02,  2.0079e-01, -6.1858e-01,  1.1261e+00,  8.8290e-02,
         -4.9974e-01,  2.4111e-01, -4.1555e-01,  2.4234e-02, -1.2444e-01,
          7.3010e-02,  1.5073e-01, -2.6869e-01,  2.0982e-02,  1.3245e-03,
         -5.2742e-01,  9.1494e-01, -2.9904e-02,  3.5611e-01, -1.6542e-03,
          4.6138e-02, -4.5048e-02,  3.9157e-02, -3.1836e-01,  1.2403e-01,
         -1.6275e-01,  1.7810e-02,  5.5963e-01,  3.2815e-01, -6.7112e-01,
          7.8985e-01,  5.6181e-04],
        [-1.2118e-02,  2.0079e-01, -6.1858e-01,  1.1261e+00,  8.8290e-02,
         -4.9974e-01,  2.4111e-01, -4.1555e-01,  2.4234e-02, -1.2444e-01,
          7.3010e-02,  1.5073e-01, -2.6869e-01,  2.0982e-02,  1.3245e-03,
         -5.2742e-01,  9.1494e-01, -2.9904e-02,  3.5611e-01, -1.6542e-03,
          4.6138e-02, -4.5048e-02,  3.9157e-02, -3.1836e-01,  1.2403e-01,
         -1.6275e-01,  1.7810e-02,  5.5963e-01,  3.2815e-01, -6.7112e-01,
          7.8985e-01,  5.6184e-04],
        [-1.2118e-02,  2.0079e-01, -6.1858e-01,  1.1261e+00,  8.8290e-02,
         -4.9974e-01,  2.4111e-01, -4.1555e-01,  2.4234e-02, -1.2444e-01,
          7.3010e-02,  1.5073e-01, -2.6869e-01,  2.0982e-02,  1.3245e-03,
         -5.2742e-01,  9.1494e-01, -2.9904e-02,  3.5611e-01, -1.6542e-03,
          4.6138e-02, -4.5048e-02,  3.9157e-02, -3.1836e-01,  1.2403e-01,
         -1.6275e-01,  1.7810e-02,  5.5963e-01,  3.2815e-01, -6.7112e-01,
          7.8985e-01,  5.6184e-04],
        [-1.2118e-02,  2.0079e-01, -6.1858e-01,  1.1261e+00,  8.8290e-02,
         -4.9974e-01,  2.4111e-01, -4.1555e-01,  2.4234e-02, -1.2444e-01,
          7.3010e-02,  1.5073e-01, -2.6869e-01,  2.0982e-02,  1.3245e-03,
         -5.2742e-01,  9.1494e-01, -2.9904e-02,  3.5611e-01, -1.6542e-03,
          4.6138e-02, -4.5048e-02,  3.9157e-02, -3.1836e-01,  1.2403e-01,
         -1.6275e-01,  1.7810e-02,  5.5963e-01,  3.2815e-01, -6.7112e-01,
          7.8985e-01,  5.6185e-04]])

def test_variance_non_negative():
    m = RunningMeanAndVarianceWelford()

    m.update_all(x)
    print(m.var(),m.mean())
    assert np.sum(m.var()<0)==0

    m = RunningMeanAndVarianceWelford()
    for i in range(x.shape[0]):
        m.update(x[i,])
    print(m.var(), m.mean())
    assert np.sum(m.var() < 0) == 0

    print(x.var(axis=0),x.mean(axis=0))
